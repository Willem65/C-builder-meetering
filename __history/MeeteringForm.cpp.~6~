#define MBN_VARARG

#include <vcl.h>
#pragma hdrstop

#include "MeeteringForm.h"
#include "mSetActuatorData.h"
#include "mbn.h"

//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{


}
//---------------------------------------------------------------------------

void __fastcall TForm1::FormCreate(TObject *Sender)
{
 	char err[MBN_ERRSIZE], ifdesc[512];
	struct mbn_if_ethernet *n;
}
//---------------------------------------------------------------------------


void LoopThroughProgressBars(int oldtst);


int oldOnline, started;
//static int oldtst, oldtstR, oldtst2, oldtstR2, newtst;
float vuValueLL, vuValueRR, vuValueProg, vuValueSub;
int oldVuMeterBuffer[64], oldProgMeterBuffer[2], oldSubMeterBuffer[2];


void __fastcall TForm1::RefreshTimerTimer(TObject *Sender)
{
	if ( online != oldOnline)
	{
		memLog->Lines->Add(online);
		started=1;
		TimerStartDelay->Enabled = true;
	}

	online = oldOnline;

	if ( started )
	{

	memLog->Lines->Add(ProgMeterBuffer[3]);

		for (int i = 0; i < 64; i++)     //Loop through each progress bar and set its value
		{

			if (oldVuMeterBuffer[i] > 0)         oldVuMeterBuffer[i] = oldVuMeterBuffer[i] - 3;
			if (oldVuMeterBuffer[i] < 0)         oldVuMeterBuffer[i] = vuValueLL;
			if (oldVuMeterBuffer[i] < vuValueLL)  oldVuMeterBuffer[i] = vuValueLL;


			//vuValueLL = VuMeterBuffer[i];
			String progressBarName = "ProgressBar" + IntToStr(i + 1);                                      // Unique name of each progress bar component
			TProgressBar* progressBar = static_cast<TProgressBar*>(FindComponent(progressBarName));        // Find the progress bar by its name

			if (progressBar)
			{
				vuValueLL = VuMeterBuffer[i];
				progressBar->Position = oldVuMeterBuffer[i];
			}
		}


		for ( int i = 0; i < 9; i++)     //Loop through the progress bar and set its value
		{
			String progressBarName;

			if (oldProgMeterBuffer[i] > 0)         oldProgMeterBuffer[i] = oldProgMeterBuffer[i] - 3;
			if (oldProgMeterBuffer[i] < 0)         oldProgMeterBuffer[i] = vuValueProg;
			if (oldProgMeterBuffer[i] < vuValueProg)  oldProgMeterBuffer[i] = vuValueProg;


			//String progressBarName = "ProgressBar" + IntToStr(i);
//			if((i+65)==70)
//			{
				AnsiString j = IntToStr(i + 65);                                      // Unique name of each progress bar component
				progressBarName = "ProgressBar" + j;
//			}

				TProgressBar* progressBar = static_cast<TProgressBar*>(FindComponent(progressBarName));        // Find the progress bar by its name

			if (progressBar)
			{
				vuValueProg = ProgMeterBuffer[i];
				progressBar->Position = ProgMeterBuffer[i];
				//progressBar->Position = oldProgMeterBuffer[i];
			}
		}

//		for (int i = 0; i < 2; i++)     //Loop through the progress bar and set its value
//		{
//			if (oldSubMeterBuffer[i] > 0)         oldSubMeterBuffer[i] = oldSubMeterBuffer[i] - 3;
//			if (oldSubMeterBuffer[i] < 0)         oldSubMeterBuffer[i] = vuValueSub;
//			if (oldSubMeterBuffer[i] < vuValueSub)  oldSubMeterBuffer[i] = vuValueSub;
//
//
//			String progressBarName = "ProgressBar" + IntToStr(i + 67);                                      // Unique name of each progress bar component
//			TProgressBar* progressBar = static_cast<TProgressBar*>(FindComponent(progressBarName));        // Find the progress bar by its name
//
//			if (progressBar)
//			{
//				vuValueSub = SubMeterBuffer[i];
//				//progressBar->Position = SubMeterBuffer[i];
//				progressBar->Position = oldSubMeterBuffer[i];
//			}
//		}
	}
	double tst=1;
}
//---------------------------------------------------------------------------

